{"_id":"iTz53pXMQ1tPwxTL","name":"Find_Familiar","permission":{"default":0,"Lh5pfUwqYBvIlqqt":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Find_Familiar                                                        ","colour":"#ff0000","trigger":""}},"core":{"sourceId":"Macro.cdehLy6YJ8Nr2vsh"}},"scope":"global","command":"// Find Familiar Spell - Allows the player to select which familiar they want\n// Thanks to Kekilla and Cole for additonal help on Discord\n// \"You want a familiar? Oh boy!\" - Droop\n// Written by Jon Whitehouse [MTGCarver#7753]\nmain()\n\nasync function main() {\n    // Is token selected? If not, error\n    if (canvas.tokens.controlled.length == 0 || canvas.tokens.controlled.length > 1) {\n        ui.notifications.error(\"Please select a single token.\");\n        return;\n    }\n    let actor = canvas.tokens.controlled[0].actor;\n\n    // Does player have the find familiar spell?\n    console.log(\"Actor: \", actor);\n    let findFamiliar = actor.items.find(item => item.data.name == \"Find Familiar\")\n    if (findFamiliar == null || findFamiliar == undefined) {\n        ui.notifications.error(`Sorry ${actor.data.name}, but you don't have the find familiar spell. Get bent.`);\n        return;\n    }\n\n    // What are the familiars available?\n    //  bat, cat, crab, frog, hawk, lizard, octopus, owl, poisonous snake, fish, rat, raven, sea horse, spider, weasel.\n    let conjureTarget = \"Bat\";\n    let summonCreature = false;\n    new Dialog({\n        title: `Choose a familiar`,\n        content: `\n            <form>\n            <div class=\"form-group\">\n              <label>Familiar:</label>\n                <select id=\"familiar-type\" name=\"familiar-type\">\n                <option value=\"bat\">Bat</option>\n                <option value=\"cat\">Cat</option>\n                <option value=\"crab\">Crab</option>\n                <option value=\"frog\">Frog</option>\n                <option value=\"hawk\">Hawk</option>\n                <option value=\"lizard\">Lizard</option>\n                <option value=\"octopus\">Octopus</option>\n                <option value=\"owl\">Owl</option>\n                <option value=\"poisonous_snake\">Poisonous Snake</option>\n                <option value=\"fish\">Quipper (Fish)</option>\n                <option value=\"rat\">Rat</option>\n                <option value=\"raven\">Raven</option>\n                <option value=\"sea-horse\">Sea Horse</option>\n                <option value=\"spider\">Spider</option>\n                <option value=\"weasel\">Weasel</option>\n                </select>\n            </div>\n            </form>\n        `,\n        buttons: {\n            summon: {\n                icon: \"<i class='fas fa-check'></i>\",\n                label: `Summon`,\n                callback: () => summonCreature = true\n            },\n            cancelOut: {\n                icon: \"<i class='fas fa-times'></i>\",\n                label: `Cancel`\n            },\n        },\n        default: \"summon\",\n        close: html => {\n            if (summonCreature) {\n                for (let token of canvas.tokens.controlled) {\n                    let FamiliarType = html.find('[name=\"familiar-type\"]')[0].value || \"none\";\n                    let conjureTarget = \"Bat\";\n                    let targetFamiliarID = \"0\";\n\n                    // Determine the player's token location and grab the X & Y coordinates\n                    const playerName = actor.data.name;\n                    const playerToken = canvas.tokens.placeables.find(\n                        i => i.name === playerName\n                    );\n                    const playerX = playerToken.data.x;\n                    const playerY = playerToken.data.y;\n\n                    console.log(\"PlayerName: \", playerName);\n                    console.log(\"playerToken: \", playerToken);\n                    console.log(\"playerX: \", playerX);\n                    console.log(\"playerY: \", playerY);\n                  \n                    // Get Type of Creature\n                    switch (FamiliarType) {\n                        case \"bat\":\n                            conjureTarget = game.actors.getName(\"Bat\");\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"cat\":\n                            conjureTarget = game.actors.getName(\"Cat\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"crab\":\n                            conjureTarget = game.actors.getName(\"Crab\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"frog\":\n                            conjureTarget = game.actors.getName(\"Frog\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"hawk\":\n                            conjureTarget = game.actors.getName(\"Hawk\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"lizard\":\n                            conjureTarget = game.actors.getName(\"Lizard\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"octopus\":\n                            conjureTarget = game.actors.getName(\"Octopus\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"owl\":\n                            conjureTarget = game.actors.getName(\"Owl\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"poisonous_snake\":\n                            conjureTarget = game.actors.getName(\"Poisonous Snake\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"fish\":\n                            conjureTarget = game.actors.getName(\"Quipper\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"rat\":\n                            conjureTarget = game.actors.getName(\"Rat\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"raven\":\n                            conjureTarget = game.actors.getName(\"Raven\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"sea-horse\":\n                            conjureTarget = game.actors.getName(\"Sea Horse\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"spider\":\n                            conjureTarget = game.actors.getName(\"Spider\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"weasel\":\n                            conjureTarget = game.actors.getName(\"Weasel\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        default:\n                            conjureTarget = game.actors.getName(\"Bat\");\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                    }\n                    // Now let's place it on the map and set all the values we want\n                    let updateToken = duplicate(conjureTarget.data.token);\n                    updateToken.x = playerX + 65;\n                    updateToken.y = playerY;\n                    updateToken.bar1 = {attribute: \"attributes.hp\"};\n                    updateToken.bar2 = {attribute: \"attributes.ac.value\"};\n                    updateToken.displayName = 20;\n                    updateToken.displayBars = 20;\n                    canvas.tokens.createMany(updateToken);\n                    console.log(\"Created token\");\n                }\n            }\n        }\n    }).render(true);\n}","author":"Lh5pfUwqYBvIlqqt","img":"modules/foundryvtt-compendiums-mix-dnd5e/assets/summoner/icons/sonic-screech.svg","actorIds":[]}
